generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  firstname    String?
  name         String?
  email        String     @unique
  password     String
  user_picture String?
  comments     Comment[]
  favorite     favorite[]
  likes        Like[]

  @@map("user")
}

model Spot {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  save        String?
  likes       Int?
  latitude    Float?
  longitude   Float?
  region      String?
  comments    Comment[]
  favorite    favorite[]
  likesRel    Like[]
  pictures    Picture[]

  @@map("spot")
}

model Comment {
  id            Int       @id @default(autoincrement())
  spot_id       Int
  user_id       Int
  comment       String
  creation_date DateTime?
  spot          Spot      @relation(fields: [spot_id], references: [id])
  user          User      @relation(fields: [user_id], references: [id])

  @@map("comment")
}

model Like {
  id      Int  @id @default(autoincrement())
  user_id Int
  spot_id Int
  spot    Spot @relation(fields: [spot_id], references: [id], map: "like")
  user    User @relation(fields: [user_id], references: [id])

  @@map("like")
}

model Picture {
  id          Int     @id @default(autoincrement())
  spot_id     Int
  url_picture String?
  spot        Spot    @relation(fields: [spot_id], references: [id])

  @@map("picture")
}

model favorite {
  id      Int  @id @default(autoincrement())
  user_id Int
  spot_id Int
  spot    Spot @relation(fields: [spot_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user    User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, spot_id], map: "unique_user_spot")
}
