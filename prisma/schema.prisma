generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           BigInt     @id @default(autoincrement())
  firstname    String?
  name         String?
  email        String     @unique
  password     String
  user_picture String?
  comments     Comment[]
  favorites    Favorite[]
  likes        Like[]
  saves        Save[]

  @@map("users")
}

model Spot {
  id          BigInt     @id @default(autoincrement())
  name        String
  description String?
  likes       Int?
  latitude    Float?
  longitude   Float?
  region      String?
  comments    Comment[]
  favorites   Favorite[]
  likesRel    Like[]
  pictures    Picture[]
  savesRel    Save[]

  @@map("spots")
}

model Comment {
  id            BigInt   @id @default(autoincrement())
  spot_id       BigInt
  user_id       BigInt
  comment       String
  creation_date DateTime @default(now())
  spot          Spot     @relation(fields: [spot_id], references: [id], onDelete: Cascade)
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("comments")
}

model Like {
  id      BigInt @id @default(autoincrement())
  user_id BigInt
  spot_id BigInt
  spot    Spot   @relation(fields: [spot_id], references: [id], onDelete: Cascade)
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, spot_id], name: "likes_user_spot_unique")
  @@map("likes")
}

model Favorite {
  id      BigInt @id @default(autoincrement())
  user_id BigInt
  spot_id BigInt
  spot    Spot   @relation(fields: [spot_id], references: [id], onDelete: Cascade)
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, spot_id], name: "favorites_user_spot_unique")
  @@map("favorites")
}

model Save {
  id      BigInt @id @default(autoincrement())
  user_id BigInt
  spot_id BigInt
  spot    Spot   @relation(fields: [spot_id], references: [id], onDelete: Cascade)
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, spot_id], name: "saves_user_spot_unique")
  @@map("saves")
}

model Picture {
  id          BigInt  @id @default(autoincrement())
  spot_id     BigInt
  url_picture String?
  spot        Spot    @relation(fields: [spot_id], references: [id], onDelete: Cascade)

  @@map("pictures")
}
